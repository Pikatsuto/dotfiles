# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "uas" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.supportedFilesystems = [ "ntfs" ];
  environment.systemPackages = [ pkgs.cifs-utils ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/57bae7e1-8ab3-4646-8c15-93e0d647d750";
      fsType = "btrfs";
    };

  fileSystems."/var" =
    { device = "/dev/disk/by-uuid/9ef76f38-bc32-46b6-a1cc-21a2db6c3403";
      fsType = "btrfs";
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/20cd13e3-02a0-467a-b564-ece5f0e3090f";
      fsType = "btrfs";
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/FD62-E2E0";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/home/gabriel" =
    { device = "/dev/disk/by-uuid/01DB3E649C7B2750";
      fsType = "ntfs-3g";
      options = [ "rw" "uid=1000" "gid=100" "umask=077" ];
    };

  fileSystems."/mnt/Video" = {
    device = "//192.168.1.61/Big/Video";
    fsType = "cifs";
    options = let
      # this line prevents hanging on network split
      automount_opts = "x-systemd.automount,noauto,x-systemd.idle-timeout=60,x-systemd.device-timeout=5s,x-systemd.mount-timeout=5s,rw,uid=1000,gid=100";

    in ["${automount_opts},credentials=/etc/nixos/smb-secrets"];
  };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/02d7ac39-d72d-4fff-98fa-2070a7664515"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
